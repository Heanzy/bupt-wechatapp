<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lhh.appservermaster.dao.UserDao" > <!-- 项目的dao层 -->
    <resultMap id="BaseResultMap" type="com.lhh.appservermaster.domain.User" > <!-- 实体类 -->
        <id column="userId" property="userId" jdbcType="INTEGER" />            <!-- 列名映射 -->
        <result column="userName" property="userName" jdbcType="VARCHAR" />
        <result column="userPassword" property="userPassword" jdbcType="VARCHAR" />
        <result column="userPhoto" property="userPhoto" jdbcType="VARCHAR" />
        <result column="userType" property="userType" jdbcType="VARCHAR" />
        <result column="userPhone" property="userPhone" jdbcType="VARCHAR" />
        <result column="userGender" property="userGender" jdbcType="VARCHAR" />
        <result column="userEmail" property="userEmail" jdbcType="VARCHAR" />
        <result column="userReputation" property="userReputation" jdbcType="INTEGER" />
        <result column="userMoney" property="userMoney" jdbcType="VARCHAR" />
        <result column="userAuthFile" property="userAuthFile" jdbcType="VARCHAR" />
        <result column="regTime" property="regTime" jdbcType="VARCHAR" />
        <result column="nickName" property="nickName" jdbcType="VARCHAR" />
        <result column="studentId" property="studentId" jdbcType="INTEGER" />
    </resultMap>
    
    <sql id="Base_Column_List" >
        userId, userName, userPassword, userPhoto, userType, userPhone, userGender, userEmail, userReputation, userMoney, userAuthFile, regTime, nickName, studentId
    </sql>

    <!-- 获取所有用户信息 -->
    <select id="getAll" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM users
    </select>

    <!-- 插入一条用户信息 -->
    <insert id="addUser" parameterType="com.lhh.appservermaster.domain.User">
        insert into users
        (
          userName, userPassword, userPhoto, userType, userPhone, userGender, userEmail, userReputation, userMoney, userAuthFile, regTime, nickName, studentId
        )
        VALUES
        (
          #{user.userName,jdbcType=VARCHAR},
          #{user.userPassword,jdbcType=VARCHAR},
          #{user.userPhoto,jdbcType=VARCHAR},
          #{user.userType,jdbcType=VARCHAR},
          #{user.userPhone,jdbcType=VARCHAR},
          #{user.userGender,jdbcType=VARCHAR},
          #{user.userEmail,jdbcType=VARCHAR},
          #{user.userReputation,jdbcType=INTEGER},
          #{user.userMoney,jdbcType=VARCHAR},
          #{user.userAuthFile,jdbcType=VARCHAR},
          #{user.regTime,jdbcType=VARCHAR},
          #{user.nickName,jdbcType=VARCHAR},
          #{user.studentId,jdbcType=INTEGER}
        )

    </insert>

    <!-- 根据id查询用户信息 -->
    <select id="getUserByID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from users
        where userId = #{userId,jdbcType=INTEGER}
    </select>

    <!-- 根据id更新用户信息 -->
    <update id="updateUserInfoByID" parameterType="com.lhh.appservermaster.domain.User">
        update users
        <set>
            <if test = "user.userName != null">
                userName = #{user.userName,jdbcType=VARCHAR},
            </if>

            <if test = "user.userPassword != null">
                userPassword = #{user.userPassword,jdbcType=VARCHAR},
            </if>
            <if test = "user.userPhoto != null">
                userPhoto = #{user.userPhoto,jdbcType=VARCHAR},
            </if>
            <if test = "user.userType != null">
                userType = #{user.userType,jdbcType=VARCHAR},
            </if>
            <if test = "user.userPhone != null">
                userPhone = #{user.userPhone,jdbcType=VARCHAR},
            </if>
            <if test = "user.userGender != null">
                userGender = #{user.userGender,jdbcType=VARCHAR},
            </if>
            <if test = "user.userEmail != null">
                userEmail = #{user.userEmail,jdbcType=VARCHAR},
            </if>
            <if test = "user.userReputation != null">
                userReputation = #{user.userReputation,jdbcType=INTEGER},
            </if>
            <if test = "user.userMoney != null">
                userMoney = #{user.userMoney,jdbcType=VARCHAR},
            </if>
            <if test = "user.userAuthFile != null">
                userAuthFile = #{user.userAuthFile,jdbcType=VARCHAR},
            </if>
            <if test = "user.regTime != null">
                regTime = #{user.regTime,jdbcType=VARCHAR},
            </if>
            <if test = "user.nickName != null">
                regTime = #{user.nickName,jdbcType=VARCHAR},
            </if>
            <if test = "user.studentId != null">
                studentId = #{user.studentId,jdbcType=INTEGER},
            </if>
        </set>
        where userId = #{user.userId,jdbcType=INTEGER}
    </update>

    <!-- 根据id删除用户信息 -->
    <delete id="deleteUserByID" parameterType="java.lang.Integer">
        delete from users
        where userId = #{userId,jdbcType=INTEGER}
    </delete>

    <!-- 根据用户名查询用户信息 -->
    <select id="getUserByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from users
        where userName = #{userName, jdbcType=VARCHAR}
    </select>

    <!-- 根据昵称查询用户信息 -->
    <select id="getUserByNickName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from users
        where nickName = #{nickName, jdbcType=VARCHAR}
    </select>
</mapper>